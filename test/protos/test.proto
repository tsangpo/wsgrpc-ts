
syntax = "proto3";

package test;

message W {
  message N { int32 id = 1; }
}

message DataFrame {
  /// request
  message Header {
    string service = 1;
    string method = 2;
  }
  /// stream end or error message
  message Trailer {
    string status = 1;
    string message = 2;
  }

  int32 callID = 1; /// stream id
  Header header = 2;
  repeated Trailer trailer = 3;
  bytes body = 4;
  repeated int32 nnn = 5;

  W.N n = 10;

  int64 iii = 11;
  repeated int32 rii = 12;
  repeated string rss = 13;
}

message Endponit { string url = 1; }

message Channel { string url = 1; }

message Simple {
  message OK {}

  enum Status {
    OK = 1;
    ABOORT = 2;
    ERROR = 3;
  }
}

/// test service
service WS {
  /// return a value
  rpc GetEndponit(Simple.OK) returns (Endponit);
  /// return a stream
  rpc pullEndponits(Simple.OK) returns (stream Endponit);
}
